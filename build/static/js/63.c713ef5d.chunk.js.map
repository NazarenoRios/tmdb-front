{"version":3,"file":"static/js/63.c713ef5d.chunk.js","mappings":"sSAMe,SAASA,EAAT,GAAuC,IAAlBC,EAAiB,EAAjBA,cAClC,GAAsBC,EAAAA,EAAAA,UAAS,IAA/B,eAAOC,EAAP,KAAYC,EAAZ,KACA,GAA8CF,EAAAA,EAAAA,WAAS,GAAvD,eAAOG,EAAP,KAAwBC,EAAxB,KAmBA,OACE,UAACC,EAAD,YACE,gBAAKC,UAAU,mBAAf,UACE,iBAAKA,UAAU,QAAf,WACE,SAAC,MAAD,CAAkBC,QAtBQ,WAChCH,GAAoBD,EACrB,IAqBQA,IAAmB,SAAC,IAAD,CAAQK,aAnBX,SAACC,EAAOC,GAC/B,IAAIC,EAAUV,EACdU,GAAWD,EAAYE,MACvBV,EAAOS,EACR,UAkBG,kBAAML,UAAU,kBAAkBO,SAAU,SAACJ,GAAD,OAhB/B,SAACA,GAChBA,EAAMK,iBACFb,EAAIc,OAAS,IACfhB,EAAcE,GACdC,EAAO,IAEV,CAU0Dc,CAASP,EAApB,EAA5C,WACE,kBACEQ,KAAK,OACLC,YAAY,yBACZC,SAAU,SAACC,GAAD,OAAOlB,EAAOkB,EAAEC,OAAOC,MAAvB,EACVA,MAAOrB,KAET,mBAAQgB,KAAK,SAAb,UACE,SAAC,MAAD,WAKT,CAED,I,EAAMZ,EAAYkB,EAAAA,GAAAA,IAAH,4lE,oBCzCA,SAASC,EAAT,GAAiD,IAAxBC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,OAC7CC,GAAYC,EAAAA,EAAAA,UAClB,GAAwB5B,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAO6B,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACRC,IAAAA,IAAA,iBAA2BC,MAAK,SAACC,GAAD,OAASJ,EAAQI,EAAIC,KAArB,GACjC,GAAE,IAEH,OAAgCnC,EAAAA,EAAAA,UAAS,IAAzC,eAAOoC,EAAP,KAAiBC,EAAjB,MAEAN,EAAAA,EAAAA,YAAU,WACJN,GACFO,IAAAA,KACQ,2BAA4B,CAChCM,KAAMT,EAAKU,GACXC,GAAIf,EAAYc,KAEjBN,MAAK,SAACC,GAAD,OAASG,EAAYH,EAAIC,KAAzB,GAEX,GAAE,CAACV,IAEJ,IAAM1B,EAAa,yCAAG,WAAOE,GAAP,4FACd+B,IAAAA,KAAW,2BAA4B,CAC3CM,KAAMT,EAAKU,GACXC,GAAIf,EAAYc,GAChB5B,QAASV,IAJS,OAMpByB,EAAOe,QAAQC,KAAK,WAAY,CAC9BF,GAAIf,EAAYc,GAChBD,KAAMT,EAAKU,GACX5B,QAASV,KAGL0C,GAZc,OAYHP,IACZQ,KAAK,CAAEC,UAAU,EAAMlC,QAASV,IACrCoC,EAAYM,GAdQ,2CAAH,sDAiBnB,GAA4C3C,EAAAA,EAAAA,UAAS,MAArD,eAAO8C,EAAP,KAAuBC,EAAvB,KAkBA,OAhBAhB,EAAAA,EAAAA,YAAU,WACJL,EAAOe,SACTf,EAAOe,QAAQO,GAAG,eAAe,SAACrC,GAChCoC,EAAkB,CAAEF,UAAU,EAAOlC,QAASA,GAC/C,GAEJ,GAAE,KAEHoB,EAAAA,EAAAA,YAAU,WACRe,GAAkBT,GAAY,SAACY,GAAD,wBAAcA,GAAd,CAAoBH,GAApB,GAC/B,GAAE,CAACA,KAEJf,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACd,UAAAJ,EAAUc,eAAV,SAAmBS,eAAe,CAAEC,SAAU,UAC/C,GAAE,CAACf,KAGF,UAAC,EAAD,YACE,gBAAK9B,UAAU,cAAf,UACE,iBAAKA,UAAU,eAAf,WACE,gBAAKA,UAAU,SAAf,UACE,SAAC,KAAD,CAAQ8C,IAAK3B,EAAY4B,IAAKC,IAAI,QAEpC,gBAAKhD,UAAU,WAAf,UACE,wBAAKmB,EAAY8B,eAIvB,gBAAKjD,UAAU,gBAAf,SACG8B,EAASoB,KAAI,SAAC7C,GACb,OACE,gBAAK8C,IAAK9B,EAAV,UACE,gBACErB,UAAS,kBACPK,EAAQkC,SAAW,SAAW,YAFlC,UAKE,gBAAKvC,UAAU,WAAf,UACE,uBAAIK,EAAQA,gBAPQ+C,EAAAA,EAAAA,KAY7B,OAEH,SAAC5D,EAAD,CAAWC,cAAeA,MAG/B,CAED,I,EAAMM,EAAYkB,EAAAA,GAAAA,IAAH,kgD,UC3FA,SAASoC,EAAT,GAA6C,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WAE3C,GAA8C7D,EAAAA,EAAAA,eAAS8D,GAAvD,eAAOC,EAAP,KAAwBC,EAAxB,KAEA,GAAwBhE,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAO6B,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACRC,IAAAA,IAAA,iBAA2BC,MAAK,SAACC,GAAD,OAASJ,EAAQI,EAAIC,KAArB,GACjC,GAAE,IAMH,OACE,8BACGN,EAAK0B,MAAQ1B,EAAK0B,OACjB,UAAC,EAAD,YACE,iBAAKjD,UAAU,QAAf,WACE,gBAAK8C,IAAKa,EAAMX,IAAI,UACpB,gDAEF,gBAAKhD,UAAU,WAAf,SACGsD,EAASJ,KAAI,SAACU,EAASC,GACtB,OACE,iBAEE7D,UAAS,kBACP6D,IAAUJ,EAAkB,WAAa,IAE3CxD,QAAS,kBApBC,SAAC4D,EAAOD,GAChCF,EAAmBG,GACnBN,EAAWK,EACZ,CAiB8BE,CAAkBD,EAAOD,EAA/B,EALX,WAOE,gBAAK5D,UAAU,SAAf,UACE,SAAC,KAAD,CACE8C,IAAKc,EAAQb,IACbC,IAAI,QAGR,gBAAKhD,UAAU,WAAf,UACE,wBAAK4D,EAAQX,WAbVY,EAiBV,OAEH,iBAAK7D,UAAU,eAAf,WACE,gBAAKA,UAAU,GAAf,UACE,SAAC,KAAD,CACE8C,IAAKvB,EAAKwB,IACVC,IAAI,cAGR,gBAAKhD,UAAU,WAAf,UACE,wBAAKuB,EAAK0B,gBAOvB,CACD,I,EAAMlD,EAAYkB,EAAAA,GAAAA,IAAH,gnD,oDC/DA,SAAS8C,IAEtB,OAAwBrE,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAO6B,EAAP,KAAaC,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,IAAAA,IAAA,iBAA2BC,MAAK,SAACC,GAAD,OAASJ,EAAQI,EAAIC,KAArB,GACjC,GAAE,KAGD,UAAC,EAAD,YACE,gBAAKiB,IAAKkB,EAAYhB,IAAI,MAC1B,qCACW,KACT,4BACGzB,EAAK0B,KADR,IACe1B,EAAK0C,SADpB,WAIF,uEAGL,CAED,I,EAAMlE,EAAYkB,EAAAA,GAAAA,IAAH,gN,8BCgCf,IAAMlB,EAAYkB,EAAAA,GAAAA,IAAH,+cAqBf,EAtEA,WAEE,IAEMG,GAASE,EAAAA,EAAAA,UACf,GAAsC5B,EAAAA,EAAAA,eAAS8D,GAA/C,eAAOrC,EAAP,KAAoB+C,EAApB,KACA,GAA+BxE,EAAAA,EAAAA,UAAS,IAAxC,eAAO4D,EAAP,KAAgBa,EAAhB,KAEMC,GAAWC,EAAAA,EAAAA,MACX9C,GAAO+C,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAV,IAwB9B,OAtBA/C,EAAAA,EAAAA,YAAU,WACR2C,GAASK,EAAAA,EAAAA,MACV,GAAC,KAEFhD,EAAAA,EAAAA,YAAU,WACJF,IACFH,EAAOe,SAAUuC,EAAAA,EAAAA,IAfR,yBAgBTtD,EAAOe,QAAQC,KAAK,WAAYb,EAAKU,IAExC,GAAC,CAACV,KAEHE,EAAAA,EAAAA,YAAW,WACLF,GACAG,IAAAA,IAAU,cACLC,MAAK,SAAAC,GAAG,OAAIuC,EAAYvC,EAAIC,KAApB,GAElB,GAAC,KAOA,+BACE,SAAC,EAAD,WACE,iBAAK7B,UAAU,YAAf,WACE,SAACqD,EAAD,CAAUC,SAAUA,EAAUC,WARb,SAACoB,GACxBT,EAAeS,EAChB,SAOwBnB,IAAhBrC,GACC,SAAC4C,EAAD,KAEA,SAAC7C,EAAD,CAAeC,YAAaA,EAAaC,OAAQA,UAM5D,C","sources":["components/Chat/ChatInput.jsx","components/Chat/ChatContainer.jsx","components/Chat/Contacts.jsx","components/Chat/Welcome.jsx","pages/Chat.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { BsEmojiSmileFill } from \"react-icons/bs\";\nimport { IoMdSend } from \"react-icons/io\";\nimport styled from \"styled-components\";\nimport Picker from \"emoji-picker-react\";\n\nexport default function ChatInput({ handleSendMsg }) {\n  const [msg, setMsg] = useState(\"\");\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const handleEmojiPickerhideShow = () => {\n    setShowEmojiPicker(!showEmojiPicker);\n  };\n\n  const handleEmojiClick = (event, emojiObject) => {\n    let message = msg;\n    message += emojiObject.emoji;\n    setMsg(message);\n  };\n\n  const sendChat = (event) => {\n    event.preventDefault();\n    if (msg.length > 0) {\n      handleSendMsg(msg);\n      setMsg(\"\");\n    }\n  };\n\n  return (\n    <Container>\n      <div className=\"button-container\">\n        <div className=\"emoji\">\n          <BsEmojiSmileFill onClick={handleEmojiPickerhideShow} />\n          {showEmojiPicker && <Picker onEmojiClick={handleEmojiClick} />}\n        </div>\n      </div>\n      <form className=\"input-container\" onSubmit={(event) => sendChat(event)}>\n        <input\n          type=\"text\"\n          placeholder=\"type your message here\"\n          onChange={(e) => setMsg(e.target.value)}\n          value={msg}\n        />\n        <button type=\"submit\">\n          <IoMdSend />\n        </button>\n      </form>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: grid;\n  align-items: center;\n  grid-template-columns: 5% 95%;\n  background-color: #080420;\n  padding: 0 2rem;\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\n    padding: 0 1rem;\n    gap: 1rem;\n  }\n  .button-container {\n    display: flex;\n    align-items: center;\n    color: white;\n    gap: 1rem;\n    .emoji {\n      position: relative;\n      svg {\n        font-size: 1.5rem;\n        color: #ffff00c8;\n        cursor: pointer;\n      }\n      .emoji-picker-react {\n        position: absolute;\n        top: -350px;\n        background-color: #080420;\n        box-shadow: 0 5px 10px #9a86f3;\n        border-color: #9a86f3;\n        .emoji-scroll-wrapper::-webkit-scrollbar {\n          background-color: #080420;\n          width: 5px;\n          &-thumb {\n            background-color: #9a86f3;\n          }\n        }\n        .emoji-categories {\n          button {\n            filter: contrast(0);\n          }\n        }\n        .emoji-search {\n          background-color: transparent;\n          border-color: #9a86f3;\n        }\n        .emoji-group:before {\n          background-color: #080420;\n        }\n      }\n    }\n  }\n  .input-container {\n    width: 100%;\n    border-radius: 2rem;\n    display: flex;\n    align-items: center;\n    gap: 2rem;\n    background-color: #ffffff34;\n    input {\n      width: 90%;\n      height: 60%;\n      background-color: transparent;\n      color: white;\n      border: none;\n      padding-left: 1rem;\n      font-size: 1.2rem;\n      &::selection {\n        background-color: #9a86f3;\n      }\n      &:focus {\n        outline: none;\n      }\n    }\n    button {\n      padding: 0.3rem 2rem;\n      border-radius: 2rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: #9a86f3;\n      border: none;\n      @media screen and (min-width: 720px) and (max-width: 1080px) {\n        padding: 0.3rem 1rem;\n        svg {\n          font-size: 1rem;\n        }\n      }\n      svg {\n        font-size: 2rem;\n        color: white;\n      }\n    }\n  }\n`;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport ChatInput from \"./ChatInput\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\n\nimport { Avatar } from \"@chakra-ui/react\";\n\n\nexport default function ChatContainer({ currentChat, socket }) {\n  const scrollRef = useRef();\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    axios.get(`/api/users/me`).then((res) => setUser(res.data));\n  }, []);\n\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    if (currentChat) {\n      axios\n        .post(\"/api/messages/getMessage\", {\n          from: user.id,\n          to: currentChat.id,\n        })\n        .then((res) => setMessages(res.data));\n    }\n  }, [currentChat]);\n\n  const handleSendMsg = async (msg) => {\n    await axios.post(\"/api/messages/addMessage\", {\n      from: user.id,\n      to: currentChat.id,\n      message: msg,\n    });\n    socket.current.emit(\"send-msg\", {\n      to: currentChat.id,\n      from: user.id,\n      message: msg,\n    });\n\n    const msgs = [...messages];\n    msgs.push({ fromSelf: true, message: msg });\n    setMessages(msgs);\n  };\n\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"msg-recieve\", (message) => {\n        setArrivalMessage({ fromSelf: false, message: message });\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    arrivalMessage && setMessages((prev) => [...prev, arrivalMessage]);\n  }, [arrivalMessage]);\n\n  useEffect(() => {\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  return (\n    <Container>\n      <div className=\"chat-header\">\n        <div className=\"user-details\">\n          <div className=\"avatar\">\n            <Avatar src={currentChat.pic} alt=\"\" />\n          </div>\n          <div className=\"username\">\n            <h3>{currentChat.name}</h3>\n          </div>\n        </div>\n      </div>\n      <div className=\"chat-messages\">\n        {messages.map((message) => {\n          return (\n            <div ref={scrollRef} key={uuidv4()}>\n              <div\n                className={`message ${\n                  message.fromSelf ? \"sended\" : \"recieved\"\n                }`}\n              >\n                <div className=\"content \">\n                  <p>{message.message}</p>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <ChatInput handleSendMsg={handleSendMsg} />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 10% 80% 10%;\n  gap: 0.1rem;\n  overflow: hidden;\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\n    grid-template-rows: 15% 70% 15%;\n  }\n  .chat-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 2rem;\n    .user-details {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      .avatar {\n        img {\n          height: 3rem;\n        }\n      }\n      .username {\n        h3 {\n          color: white;\n        }\n      }\n    }\n  }\n  .chat-messages {\n    padding: 1rem 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    overflow: auto;\n    &::-webkit-scrollbar {\n      width: 0.2rem;\n      &-thumb {\n        background-color: #ffffff39;\n        width: 0.1rem;\n        border-radius: 1rem;\n      }\n    }\n    .message {\n      display: flex;\n      align-items: center;\n      .content {\n        max-width: 40%;\n        overflow-wrap: break-word;\n        padding: 1rem;\n        font-size: 1.1rem;\n        border-radius: 1rem;\n        color: #d1d1d1;\n        @media screen and (min-width: 720px) and (max-width: 1080px) {\n          max-width: 70%;\n        }\n      }\n    }\n    .sended {\n      justify-content: flex-end;\n      .content {\n        background-color: #4f04ff21;\n      }\n    }\n    .recieved {\n      justify-content: flex-start;\n      .content {\n        background-color: #9900ff20;\n      }\n    }\n  }\n`;\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Logo from \"../../assets/logo/butterLogo3.png\";\n\nimport { Avatar } from \"@chakra-ui/react\";\n\n\nexport default function Contacts({ contacts, changeChat }) {\n\n  const [currentSelected, setCurrentSelected] = useState(undefined);\n\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    axios.get(`/api/users/me`).then((res) => setUser(res.data));\n  }, []);\n\n  const changeCurrentChat = (index, contact) => {\n    setCurrentSelected(index);\n    changeChat(contact);\n  };\n  return (\n    <>\n      {user.name && user.name && (\n        <Container>\n          <div className=\"brand\">\n            <img src={Logo} alt=\"logo\" />\n            <h3>butterflix chat</h3>\n          </div>\n          <div className=\"contacts\">\n            {contacts.map((contact, index) => {\n              return (\n                <div\n                  key={index}\n                  className={`contact ${\n                    index === currentSelected ? \"selected\" : \"\"\n                  }`}\n                  onClick={() => changeCurrentChat(index, contact)}\n                >\n                  <div className=\"avatar\">\n                    <Avatar\n                      src={contact.pic}\n                      alt=\"\"\n                    />\n                  </div>\n                  <div className=\"username\">\n                    <h3>{contact.name}</h3>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"current-user\">\n            <div className=\"\">\n              <Avatar\n                src={user.pic}\n                alt=\"avatar\"\n              />\n            </div>\n            <div className=\"username\">\n              <h2>{user.name}</h2>\n            </div>\n          </div>\n        </Container>\n      )}\n    </>\n  );\n}\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 10% 75% 15%;\n  overflow: hidden;\n  background-color: #080420;\n  .brand {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    justify-content: center;\n    img {\n      height: 2rem;\n    }\n    h3 {\n      color: white;\n      text-transform: uppercase;\n    }\n  }\n  .contacts {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    overflow: auto;\n    gap: 0.8rem;\n    &::-webkit-scrollbar {\n      width: 0.2rem;\n      &-thumb {\n        background-color: #ffffff39;\n        width: 0.1rem;\n        border-radius: 1rem;\n      }\n    }\n    .contact {\n      background-color: #ffffff34;\n      min-height: 5rem;\n      cursor: pointer;\n      width: 90%;\n      border-radius: 0.2rem;\n      padding: 0.4rem;\n      display: flex;\n      gap: 1rem;\n      align-items: center;\n      transition: 0.5s ease-in-out;\n      .avatar {\n        img {\n          height: 3rem;\n        }\n      }\n      .username {\n        h3 {\n          color: white;\n        }\n      }\n    }\n    .selected {\n      background-color: #9a86f3;\n    }\n  }\n  .current-user {\n    background-color: #0d0d30;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n    .avatar {\n      img {\n        height: 4rem;\n        max-inline-size: 100%;\n      }\n    }\n    .username {\n      h2 {\n        color: white;\n      }\n    }\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\n      gap: 0.5rem;\n      .username {\n        h2 {\n          font-size: 1rem;\n        }\n      }\n    }\n  }\n`;","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport welcomeGif from \"../../assets/chat/robot.gif\"\n\n\nexport default function Welcome() {\n\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    axios.get(`/api/users/me`).then((res) => setUser(res.data));\n  }, []);\n\n  return (\n    <Container>\n      <img src={welcomeGif} alt=\"\" />\n      <h1>\n        Welcome,{\" \"}\n        <span>\n          {user.name} {user.lastname}!\n        </span>\n      </h1>\n      <h3>Please select a chat to Start messaging.</h3>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  flex-direction: column;\n  img {\n    height: 20rem;\n  }\n  span {\n    color: #4e0eff;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport ChatContainer from \"../components/Chat/ChatContainer\";\nimport Contacts from \"../components/Chat/Contacts\";\nimport Welcome from \"../components/Chat/Welcome\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { checkLogin } from \"../state/user\";\n\nimport { io } from \"socket.io-client\"\n\nfunction Chat() {\n\n  const host = \"http://localhost:8080\"\n  \n  const socket = useRef();\n  const [currentChat, setCurrentChat] = useState(undefined);\n  const [contacts,setContacts] = useState([])\n\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.users)\n\n  useEffect(() => {\n    dispatch(checkLogin())\n  },[])\n\n  useEffect(() => {\n    if (user) {\n      socket.current = io(host);\n      socket.current.emit(\"add-user\", user.id)\n    }\n  },[user])\n\n  useEffect( () => {\n    if (user) {\n        axios.get('/api/users')\n            .then(res => setContacts(res.data))\n    }\n  },[])\n\n  const handleChatChange = (chat) => {\n    setCurrentChat(chat);\n  };\n\n  return (\n    <>\n      <Container>\n        <div className=\"container\">\n          <Contacts contacts={contacts} changeChat={handleChatChange} />\n          {currentChat === undefined ? (\n            <Welcome />\n          ) : (\n            <ChatContainer currentChat={currentChat} socket={socket} />\n          )}\n        </div>\n      </Container>\n    </>\n  );\n}\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 1rem;\n  align-items: center;\n  background-color: #131324;\n  .container {\n    height: 85vh;\n    width: 85vw;\n    background-color: #00000076;\n    display: grid;\n    grid-template-columns: 25% 75%;\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\n      grid-template-columns: 35% 65%;\n    }\n  }\n`;\n\nexport default Chat;\n"],"names":["ChatInput","handleSendMsg","useState","msg","setMsg","showEmojiPicker","setShowEmojiPicker","Container","className","onClick","onEmojiClick","event","emojiObject","message","emoji","onSubmit","preventDefault","length","sendChat","type","placeholder","onChange","e","target","value","styled","ChatContainer","currentChat","socket","scrollRef","useRef","user","setUser","useEffect","axios","then","res","data","messages","setMessages","from","id","to","current","emit","msgs","push","fromSelf","arrivalMessage","setArrivalMessage","on","prev","scrollIntoView","behavior","src","pic","alt","name","map","ref","uuidv4","Contacts","contacts","changeChat","undefined","currentSelected","setCurrentSelected","Logo","contact","index","changeCurrentChat","Welcome","welcomeGif","lastname","setCurrentChat","setContacts","dispatch","useDispatch","useSelector","state","users","checkLogin","io","chat"],"sourceRoot":""}