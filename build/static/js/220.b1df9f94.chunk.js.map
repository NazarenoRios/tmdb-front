{"version":3,"file":"static/js/220.b1df9f94.chunk.js","mappings":"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","sources":["hooks/useInput.js","utils/firebase.js","components/MyProfile/MyProfile.jsx","pages/MyProfile.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nexport function useInput() {\n  const [value, setValue] = useState(\"\");\n  function onChange(e) {\n    setValue(e.target.value);\n  }\n  return { onChange, value };\n}\n","import { initializeApp } from \"firebase/app\";\nimport { getStorage } from \"firebase/storage\";\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB0zEafL4DdbQEBa17jrferdxfQ2kE1b94\",\n  authDomain: \"butterflix-c1a3d.firebaseapp.com\",\n  projectId: \"butterflix-c1a3d\",\n  storageBucket: \"butterflix-c1a3d.appspot.com\",\n  messagingSenderId: \"907424904481\",\n  appId: \"1:907424904481:web:2c8a7f0cf3b47d649c7a60\",\n  measurementId: \"G-050GFNDBZF\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const storage = getStorage(app)","import React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport aside from \"../../assets/background/aside.mp4\";\n\nimport { useInput } from \"../../hooks/useInput\";\nimport {\n  updateProfile,\n  updateProfileLastname,\n  updateProfileName,\n  updateProfilePicture,\n} from \"../../state/user\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport {\n  VolumeUpIcon,\n  VolumeOffIcon,\n  PencilAltIcon,\n} from \"@heroicons/react/outline\";\n\nimport { storage } from \"../../utils/firebase\";\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport { Avatar } from \"@chakra-ui/react\";\n\nimport \"./Btns.css\";\n\nimport {\n  Flex,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  Stack,\n} from \"@chakra-ui/react\";\nimport { getUser } from \"../../state/updatedUser\";\n\nexport default function MyProfile() {\n  const name = useInput(\"name\");\n  const lastname = useInput(\"lastname\");\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const user = useSelector((state) => state.users);\n\n  const [userUpdated,setUser] = useState({});\n\n  //get updated user (for img)\n  useEffect(() => {\n    dispatch(getUser({id: user.id, setUser}))\n  },[])\n\n  //submit\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (name.value.length > 0 && lastname.value.length > 0) {\n      dispatch(updateProfile({ name, lastname }));\n      navigate(\"/home\");\n    } else if (name.value.length > 0) {\n      dispatch(updateProfileLastname(name));\n      navigate(\"/home\");\n    } else if (lastname.value.length > 0) {\n      dispatch(updateProfileName(lastname));\n      navigate(\"/home\");\n    } else if (user.pic !== pic) {\n      dispatch(updateProfilePicture(pic));\n      navigate(\"/home\");\n    }\n  };\n\n  // trailer sound toggle\n  const [toggleMute, setToggleMute] = useState(true);\n\n  const handleMute = (e) => {\n    e.preventDefault();\n    setToggleMute(!toggleMute);\n  };\n\n  // change img\n  const [image, setImage] = useState(null);\n  const [pic, setPic] = useState(null);\n\n  const handleImageChange = (e) => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const imageRef = ref(storage, `image${user.id}`);\n    uploadBytes(imageRef, image)\n      .then(() => {\n        getDownloadURL(imageRef)\n          .then((pic) => {\n            setPic(pic);\n          })\n          .catch((err) => {\n            console.log(err.message, \"error getting the image url\");\n          });\n        setImage(null);\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n  };\n\n  //toggle icon\n  const [toggleIcon, setToggleIcon] = useState(false);\n\n  const onHoverImg = () => {\n    setToggleIcon(!toggleIcon);\n  };\n\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     setToggleMute(false)\n  //   },0)\n  // },[])\n\n  return (\n    <Stack\n      className=\"\"\n      minH={\"99.9vh\"}\n      direction={{ base: \"column\", md: \"row\" }}\n    >\n      <Flex p={8} flex={1} align={\"center\"} justify={\"center\"}>\n        <Stack\n          as={\"form\"}\n          spacing={4}\n          w={\"full\"}\n          maxW={\"md\"}\n          onSubmit={submitHandler}\n        >\n          <div className=\"flex justify-center mb-6\">\n            <label htmlFor=\"chooseImg\">\n              <Avatar\n                onMouseEnter={onHoverImg}\n                onMouseLeave={onHoverImg}\n                className=\"absolute hover:opacity-90\"\n                size=\"2xl\"\n                src={pic ? pic : userUpdated.pic}\n              >\n                {toggleIcon ? (\n                  <PencilAltIcon className=\"absolute text-black h-8\" />\n                ) : (\n                  <PencilAltIcon className=\"absolute text-gray-700 h-8 opacity-100\" />\n                )}\n              </Avatar>\n            </label>\n          </div>\n\n          <div className=\"flex justify-center\">\n            <input\n              type=\"file\"\n              id=\"chooseImg\"\n              className=\"hidden\"\n              onChange={handleImageChange}\n            />\n            <button\n              className=\"rounded bg-[#02468a] py-2 px-10 font-semibold hover:bg-[#051e51] mb-5\"\n              onClick={handleSubmit}\n            >\n              Change Image\n            </button>\n          </div>\n\n          <Heading fontSize={\"2xl\"}>Edit your profile</Heading>\n          <FormControl id=\"name\">\n            <FormLabel>Name</FormLabel>\n            <Input type=\"text\" {...name} />\n          </FormControl>\n          <FormControl id=\"lastname\">\n            <FormLabel>Lastname</FormLabel>\n            <Input type=\"text\" {...lastname} />\n          </FormControl>\n          <Stack spacing={6}>\n            <Stack\n              direction={{ base: \"column\", sm: \"row\" }}\n              align={\"start\"}\n              justify={\"space-between\"}\n            >\n              <Link\n                to=\"/changepassword\"\n                color={\"blue.500\"}\n                className=\"text-gray-400 hover:text-white\"\n              >\n                Forgot password?\n              </Link>\n            </Stack>\n            <button\n              className=\"w-full rounded bg-[#02468a] py-3 font-semibold hover:bg-[#051e51]\"\n              type=\"submit\"\n            >\n              Confirm\n            </button>\n          </Stack>\n        </Stack>\n      </Flex>\n      <Flex flex={1}>\n        <Trailer\n          src={aside}\n          autoPlay\n          muted={toggleMute}\n          loop\n          className=\"trailer\"\n        />\n        {toggleMute ? (\n          <VolumeOffIcon type=\"button\" onClick={handleMute} className=\"upBtn\" />\n        ) : (\n          <VolumeUpIcon\n            type=\"button\"\n            onClick={handleMute}\n            className=\"downBtn\"\n          />\n        )}\n      </Flex>\n    </Stack>\n  );\n}\n\nconst Trailer = styled.video`\n  height: 100%;\n  width: 48.5vw;\n  position: absolute;\n  object-fit: cover;\n  margin-top: 0;\n\n  @media screen and (max-width: 2400px) {\n    width: 48.3vw;\n  }\n\n  @media screen and (max-width: 2089px) {\n    width: 48.2vw;\n  }\n\n  @media screen and (max-width: 1973px) {\n    width: 48vw;\n  }\n\n  @media screen and (max-width: 1776px) {\n    width: 47.8vw;\n  }\n\n  @media screen and (max-width: 1614px) {\n    width: 47.6vw;\n  }\n\n  @media screen and (max-width: 1480px) {\n    width: 47.3vw;\n  }\n\n  @media screen and (max-width: 1315px) {\n    width: 47vw;\n  }\n\n  @media screen and (max-width: 1184px) {\n    width: 46.7vw;\n  }\n\n  @media screen and (max-width: 1076px) {\n    width: 46.4vw;\n  }\n\n  @media screen and (max-width: 988px) {\n    width: 46vw;\n  }\n\n  @media screen and (max-width: 888px) {\n    width: 45.7vw;\n  }\n\n  @media screen and (max-width: 826px) {\n    width: 45.5vw;\n  }\n\n  @media screen and (max-width: 789px) {\n    width: 45.2vw;\n  }\n\n  @media screen and (max-width: 768px) {\n    height: 26vh;\n    width: 100%;\n  }\n`;\n","import React, { useEffect } from \"react\";\nimport Nav from \"../components/Nav/Nav\";\nimport MyProfilePage from \"../components/MyProfile/MyProfile\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { checkLogin } from \"../state/user\";\nimport NeedToLogIn from \"../pages/NeedToLogin\";\n\n\nfunction MyProfile() {\n\n  const user = useSelector((state) => state.users);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(checkLogin());\n  }, []);\n\n  if (user.id) {\n    return (\n      <>\n        <Nav />\n        <MyProfilePage />\n      </>\n    );\n  }\n\n  return (\n    <NeedToLogIn/>\n  );\n}\n\nexport default MyProfile;\n"],"names":["useInput","useState","value","setValue","onChange","e","target","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","getStorage","MyProfile","name","lastname","navigate","useNavigate","dispatch","useDispatch","user","useSelector","state","users","userUpdated","setUser","useEffect","getUser","id","toggleMute","setToggleMute","handleMute","preventDefault","image","setImage","pic","setPic","toggleIcon","setToggleIcon","onHoverImg","className","minH","direction","base","md","p","flex","align","justify","as","spacing","w","maxW","onSubmit","length","updateProfile","updateProfileLastname","updateProfileName","updateProfilePicture","htmlFor","onMouseEnter","onMouseLeave","size","src","PencilAltIcon","type","files","onClick","imageRef","ref","uploadBytes","then","getDownloadURL","catch","err","console","log","message","fontSize","sm","to","color","Trailer","aside","autoPlay","muted","loop","VolumeOffIcon","VolumeUpIcon","styled","checkLogin","Nav"],"sourceRoot":""}