{"version":3,"file":"static/js/322.d2b6ac24.chunk.js","mappings":"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","sources":["common/Card/UserPersonalCard/UserPersonalCard.jsx","common/Card/UserPersonalCard/UserInfoCard.jsx","components/Users/UserPage.jsx","pages/User.jsx","../node_modules/@heroicons/react/outline/esm/LogoutIcon.js","../node_modules/@heroicons/react/outline/esm/UserIcon.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\n\nimport {\n  Box,\n  Center,\n  Heading,\n  Text,\n  Stack,\n  Image,\n} from \"@chakra-ui/react\";\n\nexport default function UserPersonalCard({ user }) {\n  return (\n    <Link to={`/user/${user.id}`}>\n      <Center py={20}>\n        <Box\n          role={\"group\"}\n          p={6}\n          w={\"full\"}\n          className=\"bg-[#131728]\"\n          boxShadow={\"2xl\"}\n          rounded={\"lg\"}\n          pos={\"relative\"}\n          zIndex={1}\n          mt={5}\n        >\n          <Box\n            className=\"flex justify-center\"\n            rounded={\"lg\"}\n            mt={-12}\n            pos={\"relative\"}\n            height={\"230px\"}\n            _after={{\n              transition: \"all .3s ease\",\n              content: '\"\"',\n              w: \"full\",\n              h: \"full\",\n              pos: \"absolute\",\n              top: 5,\n              left: 0,\n              backgroundImage: `url(${user.pic})`,\n              filter: \"blur(15px)\",\n              zIndex: -1,\n            }}\n            _groupHover={{\n              _after: {\n                filter: \"blur(20px)\",\n              },\n            }}\n          >\n            <Image\n              rounded={\"lg\"}\n              height={230}\n              width={282}\n              objectFit={\"cover\"}\n              src={user.pic}\n            />\n          </Box>\n          <Stack pt={10} align={\"center\"}>\n            <Text\n              color={\"gray.500\"}\n              fontSize={\"sm\"}\n              textTransform={\"uppercase\"}\n            >\n              {user.name} {user.lastname}\n            </Text>\n            <Heading\n              color={\"white\"}\n              fontSize={\"xl\"}\n              fontFamily={\"body\"}\n              fontWeight={500}\n            >\n              {user.email}\n            </Heading>\n            <Stack direction={\"row\"} align={\"center\"}>\n              <span\n                className=\"text-gray-500\"\n                color={\"black\"}\n                fontWeight={800}\n                fontSize={\"xl\"}\n              >\n                Last Activity\n              </span>\n            </Stack>\n            <p\n              className=\"text-white\"\n              style={{\n                fontSize: \"20px\",\n                fontWeight: \"bold\",\n                letterSpacing: \"2px\",\n              }}\n            >\n              {new Date(user.lastActivity).toLocaleDateString()}\n            </p>\n          </Stack>\n        </Box>\n      </Center>\n    </Link>\n  );\n}\n","import { Link } from \"react-router-dom\";\n\nimport {\n  Box,\n  Center,\n  Heading,\n  Text,\n  Stack,\n  Image,\n} from \"@chakra-ui/react\";\n\nexport default function UserInfoCard({ movie }) {\n\n  const base_url = \"https://image.tmdb.org/t/p/original/\";\n\n  return (\n    <Link to={`/movie/${movie.code}`}>\n      <Center py={20} >\n        <Box\n          role={\"group\"}\n          p={6}\n          maxW={\"330px\"}\n          w={\"full\"}\n          className=\"bg-[#131728]\"\n          boxShadow={\"2xl\"}\n          rounded={\"lg\"}\n          pos={\"relative\"}\n          zIndex={1}\n        >\n          <Box\n            rounded={\"lg\"}\n            mt={-12}\n            pos={\"relative\"}\n            height={\"230px\"}\n            _after={{\n              transition: \"all .3s ease\",\n              content: '\"\"',\n              w: \"full\",\n              h: \"full\",\n              pos: \"absolute\",\n              top: 5,\n              left: 0,\n              backgroundImage: `url(${base_url}${movie.poster_path || movie.backdrop_path})`,\n              filter: \"blur(15px)\",\n              zIndex: -1,\n            }}\n            _groupHover={{\n              _after: {\n                filter: \"blur(20px)\",\n              },\n            }}\n          >\n            <Image\n              rounded={\"lg\"}\n              height={230}\n              width={282}\n              objectFit={\"cover\"}\n              src={`${base_url}${movie.poster_path || movie.backdrop_path}`}\n            />\n          </Box>\n          <Stack pt={10} align={\"center\"}>\n            <Text\n              color={\"gray.500\"}\n              fontSize={\"sm\"}\n              textTransform={\"uppercase\"}\n            >\n              {movie.title}\n            </Text>\n            <Heading\n              color={\"white\"}\n              fontSize={\"xl\"}\n              fontFamily={\"body\"}\n              fontWeight={500}\n              py={3}\n            >\n              {movie.release_date}\n            </Heading>\n            <Stack direction={\"row\"} align={\"center\"}>\n              <span\n                className=\"text-gray-500\"\n                color={\"black\"}\n                fontWeight={800}\n                fontSize={\"xl\"}\n              >\n                Raiting\n              </span>\n            </Stack>\n            <p\n              className=\"text-white\"\n              style={{\n                fontSize: \"20px\",\n                fontWeight: \"bold\",\n                letterSpacing: \"2px\",\n              }}\n            >\n              {movie.raiting.toFixed(1)}\n            </p>\n          </Stack>\n        </Box>\n      </Center>\n    </Link>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { SimpleGrid } from \"@chakra-ui/react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from 'react-router-dom';\nimport { getUser } from '../../state/updatedUser';\nimport UserPersonalCard from \"../../common/Card/UserPersonalCard/UserPersonalCard\";\nimport UserInfoCard from \"../../common/Card/UserPersonalCard/UserInfoCard\";\nimport { UserFavorites } from \"../../state/favorites\";\n\nfunction UserPage() {\n\n  const params = useParams()\n  const id = JSON.stringify(parseInt(params.id));\n\n  const [user,setUser] = useState({});\n  const [movies,setMovies] = useState([]);\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getUser({id,setUser}))\n  },[])\n\n  useEffect(() => {\n    dispatch(UserFavorites({id,setMovies}));\n  }, []);\n\n  return (\n    <>\n      <UserPersonalCard user={user}/>\n\n      <div className=\"flex justify-center mb-2\">\n        <h1 style={{fontSize:\"30px\"}}>{user.name}</h1>\n      </div>\n\n      <div className=\"flex justify-center\">\n        <h2 style={{fontSize:\"30px\"}}>Favorite List</h2>\n      </div>\n\n      <SimpleGrid minChildWidth=\"300px\" spacing=\"30px\">\n        {movies.map((movie,i) => (\n          <UserInfoCard movie={movie} key={i}/>\n        ))}\n      </SimpleGrid>\n    </>\n  );\n}\n\n\nexport default UserPage;\n","import React, { useEffect } from \"react\";\nimport Nav from \"../components/Nav/Nav\";\nimport UserPage from \"../components/Users/UserPage\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { checkLogin } from \"../state/user\";\nimport NeedToLogIn from \"../pages/NeedToLogin\";\n\nfunction User() {\n\n  const user = useSelector((state) => state.users);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(checkLogin());\n  }, []);\n\n  if (user.id) {\n    return (\n      <>\n        <Nav />\n        <UserPage />\n      </>\n    );\n  }\n\n  return (\n    <NeedToLogIn/>\n  );\n}\n\nexport default User;\n","import * as React from \"react\";\n\nfunction LogoutIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(LogoutIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction UserIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(UserIcon);\nexport default ForwardRef;"],"names":["UserPersonalCard","user","to","id","py","role","p","w","className","boxShadow","rounded","pos","zIndex","mt","height","_after","transition","content","h","top","left","backgroundImage","pic","filter","_groupHover","width","objectFit","src","pt","align","color","fontSize","textTransform","name","lastname","fontFamily","fontWeight","email","direction","style","letterSpacing","Date","lastActivity","toLocaleDateString","UserInfoCard","movie","base_url","code","maxW","poster_path","backdrop_path","title","release_date","raiting","toFixed","params","useParams","JSON","stringify","parseInt","useState","setUser","movies","setMovies","dispatch","useDispatch","useEffect","getUser","UserFavorites","minChildWidth","spacing","map","i","useSelector","state","users","checkLogin","Nav","ForwardRef","React","props","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d"],"sourceRoot":""}